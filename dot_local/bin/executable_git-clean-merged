#!/bin/sh
#
# Delete all branches that have been merged to master && push deletes to remote origin
# from: https://github.com/SnapInteractive/git-tools
# 
# Usage: git clean-merged

CHECK_ORIGIN=$(git remote -v | grep '^origin.\+(push)$')
if [ -z "$CHECK_ORIGIN" ]; then
	echo "You need to be in a git repo with a pushable \"origin\" remote!"
	exit 1
fi

if [ "$1" = "-i" ]; then
	INTERACTIVE="yes"
else
	INTERACTIVE=""
fi

HAS_MAIN_BRANCH=$(git branch | grep main | wc -l)
if [ "$HAS_MAIN_BRANCH" -eq 0 ]; then
  MAINLINE_BRANCH="master"
else
  MAINLINE_BRANCH="main"
fi

for BRANCH in $(git branch --merged $MAINLINE_BRANCH | grep -v "\<$MAINLINE_BRANCH\>\|^\*"); do
  if [ -n "$INTERACTIVE" ]; then
    read -p "$(basename $0): remove branch '$BRANCH'? (y)" RESPONSE
    if [  "$RESPONSE" != 'y' ] && [ "$RESPONSE" != '' ]; then
      continue
    fi
  fi
  ST=$(git branch -d "$BRANCH" 2>&1)
  if [ $? -eq 0 ]; then
    echo "Pruned \"$BRANCH\"; removing from origin...\c"
    RST=$(git push origin ":$BRANCH" 2>&1)
    if [ $? -eq 0 ]; then
      echo " Removed."
    else
      echo
      echo "Branch \"$BRANCH\" not removed from origin: $RST"
    fi
  else
    ST=$(echo "$ST" | head -n 1 | sed 's/error: //')
    echo "Branch \"$BRANCH\" not removed: $ST"
  fi
done
